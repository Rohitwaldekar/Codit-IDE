package application;

import java.io.File;

import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Orientation;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.SplitPane;
import javafx.scene.control.TabPane;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.MenuItem;
import javafx.scene.image.Image;
import javafx.scene.layout.BorderPane;
import javafx.stage.DirectoryChooser;
import javafx.stage.Stage;

public class Codit extends Application {

	private TabPane leftPane = new TabPane();
	private TabPane bottomPane = new TabPane();
	private SplitPane paneFree = new SplitPane();

	final String IDLE_BUTTON_STYLE = "-fx-background-color: transparent;";
	final String HOVERED_BUTTON_STYLE = "-fx-background-color: -fx-shadow-highlight-color, -fx-outer-border, -fx-inner-border, -fx-body-color;";
	
	//TreeView<String> fileTree;
	
	@Override
	public void start(Stage stage) {

//Objects
		BorderPane outer = new BorderPane();

		BorderPane inner = new BorderPane();

		Editor editor = new Editor();

		CreateToolBar toolBar = new CreateToolBar();

		FileSystem fileSystem = new FileSystem();

		Variables variables = new Variables();
		
		CreateMenuBar menuBar = new CreateMenuBar();

		Console console = new Console();
		
		Browser browser = new Browser();
		
//##Events handling	
		Button newBut = toolBar.getNewBut();
		
//Create new Editor 		
		newBut.setOnAction(new EventHandler<ActionEvent>() {

			@Override
			public void handle(ActionEvent arg0) {
				editor.setEditor("New TAb !");
			}
		});

		newBut.setStyle(IDLE_BUTTON_STYLE);
		newBut.setOnMouseEntered(e -> newBut.setStyle(HOVERED_BUTTON_STYLE));
		newBut.setOnMouseExited(e -> newBut.setStyle(IDLE_BUTTON_STYLE));

//Open new file
		MenuItem open = menuBar.getOpen();

		//BorderPane b = new BorderPane();
						
		open.setOnAction(new EventHandler<ActionEvent>() {
			@Override
			public void handle(ActionEvent e) {

				DirectoryChooser directoryChooser = new DirectoryChooser();

				directoryChooser.setInitialDirectory(new File(System.getProperty("user.home")));

				// Stage stage = new Stage();
				File choice = directoryChooser.showDialog(stage);

				if (choice == null || !choice.isDirectory()) {

					Alert alert = new Alert(AlertType.ERROR);

					alert.setHeaderText("File Not Found.");

					alert.setContentText("Please Select file !");

					alert.showAndWait();
				} else {
					
					fileSystem.setFileSystem(choice);
				}
			}
		});


//Open file

		
		/*TreeItem<String> tree = fileSystem.getFileTree();

		tree.addEventHandler(MouseEvent.MOUSE_CLICKED, event -> {  
			
			if (event.getClickCount() == 2)  
            {  
            	System.out.println("Double Cliked Me !");                
            }         
		});  */
		/*fileTree.setOnMouseClicked(new EventHandler<MouseEvent>()  
        {  
            @Override  
            public void handle(MouseEvent mouseEvent)  
            {  
  
                if (mouseEvent.getClickCount() == 2 && mouseEvent.getButton() == MouseButton.PRIMARY)  
                {  
                	System.out.println("Double Cliked Me !");                }  
  
            }  
    });
	*/
	
		inner.setTop(toolBar.getToolBar());

		SplitPane root = new SplitPane();

		root.setOrientation(Orientation.VERTICAL);

		bottomPane.getTabs().addAll(console.getConsole(), browser.getBrowser());

		SplitPane.setResizableWithParent(bottomPane, Boolean.FALSE);

		leftPane.getTabs().addAll(fileSystem.getFileSystem(), variables.getVariables());

		paneFree.getItems().addAll(leftPane, editor.getEditor());

		root.getItems().addAll(paneFree, bottomPane);

		inner.setCenter(root);

		outer.setTop(menuBar.getMenuBar());

		outer.setCenter(inner);

		stage.getIcons().add(new Image("folder-open.png"));
		stage.setTitle("Codit IDE");
		stage.setScene(new Scene(outer, 1300, 700));
		stage.show();
	}

	public static void main(String[] args) {
		Codit.launch(args);
	}
	
}
